#BlueJ class context
comment0.params=
comment0.target=LifeWorld()
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ LifeWorld.\r\n\ \r\n
comment1.params=rowNumber
comment1.target=int\ rowToY(int)
comment10.params=row\ col
comment10.target=boolean\ getGrid(int,\ int)
comment11.params=row\ col\ specimenAlive
comment11.target=void\ setGrid(int,\ int,\ boolean)
comment11.text=\r\n\ sets\ values\ in\ next\ generation\ grid\r\n\ @param\ row\ -\ horizontal\ location\ of\ empty\ square\ or\ square\ with\ specimen\ \r\n\ @param\ column\ -\ vertical\ location\ of\ empty\ square\ or\ square\ with\ specimen\ \r\n\ @param\ specimenAlive\ -\ square\ with\ specimen\ or\ square\ without\ specimen\ \r\n
comment12.params=
comment12.target=void\ loadSpecimensFromGrid()
comment13.params=
comment13.target=void\ updateGenerationGrid()
comment14.params=
comment14.target=void\ sortRows()
comment15.params=row1\ row2
comment15.target=void\ swap(int,\ int)
comment15.text=\r\n\ swaps\ row\ with\ more\ specimens\ for\ previous\ row\ with\ less\ specimens\r\n\ @param\ row1\ -\ current\ row\r\n\ @param\ row2\ -\ following\ row\r\n
comment16.params=
comment16.target=void\ sortColumns()
comment17.params=col1\ col2\ gridSize
comment17.target=void\ swapC(int,\ int,\ int)
comment17.text=\r\n\ swaps\ columns\ with\ less\ specimens\ than\ previous\ column\ with\ more\ specimens\ \r\n\ @param\ col1\ -\ current\ column\r\n\ @param\ col2\ -\ following\ column\r\n
comment2.params=colNumber
comment2.target=int\ colToX(int)
comment3.params=boardSize
comment3.target=void\ buildBG(int)
comment3.text=\r\n\ buildBG\ -\ builds\ the\ background\ image\ for\ the\ world,\ based\ on\ the\ size\ of\ the\ board.\r\n\ \ \ @param\ boardSize\ -\ the\ size\ of\ the\ board\ (same\ as\ number\ of\ rows\ or\ columns)\r\n
comment4.params=
comment4.target=int\ getBoardSize()
comment4.text=\r\n\ getBoardSize\ -\ returns\ the\ number\ of\ squares\ along\ one\ side\ of\ the\ board\ (remember\ that\ the\r\n\ \ \ \ \ \ board\ is\ a\ square\ grid\ (of\ squares,\ each\ of\ which\ may\ or\ may\ not\ contain\ a\ specimen).\ \r\n\ \ \ \ \ \ \r\n\ @return\ the\ side\ length\ of\ the\ current\ simulation\ board\r\n
comment5.params=newBoardSize
comment5.target=void\ setBoardSize(int)
comment5.text=\r\n\ setBoardSize\ -\ sets\ the\ board's\ sidelength\ to\ the\ number\ of\ squares\ specified.\ NOTE\ THAT\ THIS\r\n\ \ \ \ \ \ \ WILL\ REDRWAW\ THE\ WORLD'S\ BACKGROUND\!\r\n\ \ \ \ \ \ \r\n\ @param\ newBoardSize\ -\ \ the\ new\ side\ length\ for\ the\ simulation\ board\r\n
comment6.params=
comment6.target=boolean\ getPaused()
comment6.text=\r\n\ Checks\ to\ see\ if\ world\ is\ paused\r\n\ @return\ the\ world\ either\ pauses\ or\ unpaused\r\n
comment7.params=action
comment7.target=void\ setPaused(boolean)
comment7.text=\r\n\ @param\ action\ -\ tells\ world\ to\ pause\ or\ unpause\r\n
comment8.params=
comment8.target=void\ act()
comment8.text=\r\n\ while\ world\ isn't\ paused,\ each\ square\ in\ game\ board\ counts\ how\ many\ of\ its\ neighboring\ 8\ squares\ (left,\ right,\ up,\ down,\ &\ diagonally)\ contain\ a\ specimen\ while\ not\ counting\r\n\ itself.\ If\ a\ specimen\ is\ currently\ in\ a\ square\ and\ its\ neighbor\ count\ is\ less\ than\ 2\ or\ more\ than\ 3,\ it\ will\ die\ and\ square\ will\ be\ empty\ for\ next\ generation.\ If\ their\r\n\ neighbor\ count\ is\ 2\ of\ 3,\ it\ lives\ in\ current\ square\ in\ next\ generation.\ If\ there\ isn't\ currently\ a\ specimen\ in\ a\ square\ and\ its\ neighbor\ count\ is\ 3,\ a\ new\ specimen\ is\ born\ into\r\n\ the\ square\ in\ the\ next\ generation\ but\ if\ its\ neighbor\ count\ isn't\ 3,\ it\ remains\ empty\ in\ next\ generation.\ *Current\ generation\ is\ being\ calculated,\ not\ next\ generation\ or\ combo\r\n\ of\ both*\r\n
comment9.params=gridSize
comment9.target=void\ createGrid(int)
comment9.text=\r\n\ creates\ current\ and\ future\ generation\ grid\r\n\ @param\ gridSize\ -\ grid\ size\ for\ current\ and\ future\ generation\r\n
numComments=18
